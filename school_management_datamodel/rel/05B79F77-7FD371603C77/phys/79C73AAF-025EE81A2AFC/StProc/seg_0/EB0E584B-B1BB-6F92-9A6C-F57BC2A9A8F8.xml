<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureOraclev10g class="oracle.dbtools.crest.model.design.storage.oracle.v10g.StoredProcedureOraclev10g" name="proc_school_sector_auto" directorySegmentName="seg_0" id="EB0E584B-B1BB-6F92-9A6C-F57BC2A9A8F8">
<createdBy>leads</createdBy>
<createdTime>2021-06-09 06:20:28 UTC</createdTime>
<ownerDesignName>school_management_datamodel</ownerDesignName>
<source>create or replace PROCEDURE proc_school_sector_auto AS

    v_school_code    school_sector.school_code%TYPE;
    v_batch_no       school_sector.batch_no#%TYPE;
    v_class_code     school_sector.class_code%TYPE;
    v_sector_code    school_sector.sector_code%TYPE;
    v_serial_no      school_sector.serial_no%TYPE;
    v_location_code  school_sector.location_code%TYPE;
    v_monetary_type  school_sector.monetary_type%TYPE;
    v_status_name    school_sector.status_name%TYPE;
    CURSOR cur IS
    SELECT
        ssec.school_code,
        add_months(ssec.batch_no#, 12) AS batch_no#,
        ssec.class_code,
        ssec.sector_code,
        ssec.serial_no,
        ssec.location_code,
        ssec.monetary_type,
        ssec.status_name
    FROM
             ( SELECT
              school_code,
              MAX(batch_no#) AS batch_no#
          FROM
              school_sector
          GROUP BY
              school_code
        ) v
        INNER JOIN school_sector ssec ON ( ssec.school_code = v.school_code
                                           AND ssec.batch_no# = v.batch_no# )
    WHERE
        ssec.status_name = &apos;ACTIVE&apos;;

    CURSOR cur_school_sector (
        p_school_code  VARCHAR2,
        p_batch_no     DATE,
        p_class_code   VARCHAR2
    ) IS
    SELECT
        school_code,
        batch_no#,
        class_code,
        sector_code,
        serial_no,
        location_code,
        monetary_type,
        status_name
    FROM
        school_sector
    WHERE
            school_code = p_school_code
        AND batch_no# = p_batch_no
        AND class_code = p_class_code;

BEGIN
    FOR indx IN cur LOOP
        OPEN cur_school_sector(p_school_code =&gt; indx.school_code, p_batch_no =&gt; indx.batch_no#, p_class_code =&gt; indx.class_code);

        FETCH cur_school_sector INTO
            v_school_code,
            v_batch_no,
            v_class_code,
            v_sector_code,
            v_serial_no,
            v_location_code,
            v_monetary_type,
            v_status_name;

        IF cur_school_sector%notfound THEN
            INSERT INTO school_sector (
                school_code,
                batch_no#,
                class_code,
                sector_code,
                serial_no,
                location_code,
                monetary_type,
                status_name
            ) VALUES (
                indx.school_code,
                indx.batch_no#,
                indx.class_code,
                indx.sector_code,
                indx.serial_no,
                indx.location_code,
                indx.monetary_type,
                indx.status_name
            );

        END IF;

        CLOSE cur_school_sector;
    END LOOP;
END;</source>
</StoredProcedureOraclev10g>