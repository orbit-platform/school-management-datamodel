<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureOraclev10g class="oracle.dbtools.crest.model.design.storage.oracle.v10g.StoredProcedureOraclev10g" name="proc_school_session_auto" directorySegmentName="seg_0" id="03D88BDB-3965-0288-9F91-A6783711E68F">
<createdBy>leads</createdBy>
<createdTime>2021-06-09 07:44:04 UTC</createdTime>
<ownerDesignName>school_management_datamodel</ownerDesignName>
<source>CREATE OR REPLACE PROCEDURE proc_school_session_auto AS

    v_school_code     school_session.school_code%TYPE;
    v_batch_no        school_session.batch_no#%TYPE;
    v_class_code      school_session.class_code%TYPE;
    v_effective_from  school_session.effective_from%TYPE;
    v_effective_upto  school_session.effective_upto%TYPE;
    v_status_name     school_session.status_name%TYPE;
    CURSOR cur IS
    SELECT
        sses.school_code,
        add_months(sses.batch_no#, 12) AS batch_no#,
        sses.class_code,
        add_months(sses.effective_from, 12) AS effective_from,
        add_months(sses.effective_upto, 12) AS effective_upto,
        sses.status_name
    FROM
             ( SELECT
              school_code,
              MAX(batch_no#) AS batch_no#
          FROM
              school_session
          WHERE
                  status_name = &apos;ACTIVE&apos;
          GROUP BY
              school_code
        ) v
        INNER JOIN school_session sses ON ( sses.school_code = v.school_code
                                            AND sses.batch_no# = v.batch_no# )
    WHERE
        sses.status_name = &apos;ACTIVE&apos;;

    CURSOR cur_school_session (
        p_school_code  VARCHAR2,
        p_batch_no     DATE,
        p_class_code   VARCHAR2
    ) IS
    SELECT
        school_code,
        batch_no#,
        class_code,
        effective_from,
        effective_upto,
        status_name
    FROM
        school_session
    WHERE
            school_code = p_school_code
        AND batch_no# = p_batch_no
        AND class_code = p_class_code;

BEGIN
    FOR indx IN cur LOOP
        OPEN cur_school_session(p_school_code =&gt; indx.school_code, p_batch_no =&gt; indx.batch_no#, p_class_code =&gt; indx.class_code);

        FETCH cur_school_session INTO
            v_school_code,
            v_batch_no,
            v_class_code,
            v_effective_from,
            v_effective_upto,
            v_status_name;
        IF cur_school_session%notfound THEN
            INSERT INTO school_session (
                school_code,
                batch_no#,
                class_code,
                effective_from,
                effective_upto,
                status_name
            ) VALUES (
                indx.school_code,
                 indx.batch_no#,
                 indx.class_code,
                 indx.effective_from,
                 indx.effective_upto,
                 indx.status_name
            );

        END IF;

        CLOSE cur_school_session;
    END LOOP;
END;</source>
</StoredProcedureOraclev10g>