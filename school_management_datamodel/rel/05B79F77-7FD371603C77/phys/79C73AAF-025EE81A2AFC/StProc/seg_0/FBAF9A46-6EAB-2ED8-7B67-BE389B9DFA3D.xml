<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureOraclev10g class="oracle.dbtools.crest.model.design.storage.oracle.v10g.StoredProcedureOraclev10g" name="proc_school_super_auto" directorySegmentName="seg_0" id="FBAF9A46-6EAB-2ED8-7B67-BE389B9DFA3D">
<createdBy>leads</createdBy>
<createdTime>2021-07-29 06:03:24 UTC</createdTime>
<ownerDesignName>school_management_datamodel</ownerDesignName>
<source>CREATE OR REPLACE PROCEDURE proc_school_super_auto AS
    ---variable declaration
    v_school_code     school_super.school_code%TYPE;
    v_batch_no#       school_super.batch_no#%TYPE;
    v_class_code      school_super.class_code%TYPE;
    v_super_code      school_super.super_code%TYPE;
    v_pseudo_name     school_super.pseudo_name%TYPE;
    v_serial_no       school_super.serial_no%TYPE;
    v_part_name       school_super.part_name%TYPE;
    v_ranking_type    school_super.ranking_type%TYPE;
    v_category_code   school_super.category_code%TYPE;
    v_optional_type   school_super.optional_type%TYPE;
    v_score_type      school_super.score_type%TYPE;
    v_compulsory_type school_super.compulsory_type%TYPE;
    v_status_name     school_super.status_name%TYPE;
    v_descriptions    school_super.descriptions%TYPE;

    ---cursor declaration
    CURSOR cur IS
    SELECT
        ssup.school_code,
        add_months(ssup.batch_no#, 12) AS batch_no#,
        ssup.class_code,
        ssup.super_code,
        ssup.pseudo_name,
        ssup.serial_no,
        ssup.part_name,
        ssup.ranking_type,
        ssup.category_code,
        ssup.optional_type,
        ssup.score_type,
        ssup.compulsory_type,
        ssup.status_name,
        ssup.descriptions
    FROM
             school_super ssup
        INNER JOIN school_class scls
        ON ( scls.school_code = ssup.school_code
             AND scls.class_code = ssup.class_code )
    WHERE
            scls.status_name = &apos;ACTIVE&apos;
        AND ssup.status_name = &apos;ACTIVE&apos;
        AND ssup.batch_no# = ( SELECT
                                   MAX(batch_no#)
                               FROM
                                   school_super
                               WHERE
                                       status_name = &apos;ACTIVE&apos;
                                   AND school_code = ssup.school_code
                                   AND class_code = ssup.class_code
                                   AND super_code = ssup.super_code
                             )
    ORDER BY
        ssup.school_code,
        ssup.class_code,
        ssup.serial_no;

    ---school super
    CURSOR cur_school_super (
        p_school_code VARCHAR2,
        p_batch_no    DATE,
        p_class_code  VARCHAR2,
        p_super_code  VARCHAR2
    ) IS
    SELECT
        school_code,
        batch_no#,
        class_code,
        super_code,
        pseudo_name,
        serial_no,
        part_name,
        ranking_type,
        category_code,
        optional_type,
        score_type,
        compulsory_type,
        status_name,
        descriptions
    FROM
        school_super
    WHERE
            school_code = p_school_code
        AND batch_no# = p_batch_no
        AND class_code = p_class_code
        AND super_code = p_super_code;
BEGIN
    FOR indx IN cur LOOP
        OPEN cur_school_super(p_school_code =&gt; indx.school_code, p_batch_no =&gt; indx.batch_no#, p_class_code =&gt; indx.class_code, p_super_code =&gt; indx.super_code);
        FETCH cur_school_super INTO
            v_school_code,
            v_batch_no#,
            v_class_code,
            v_super_code,
            v_pseudo_name,
            v_serial_no,
            v_part_name,
            v_ranking_type,
            v_category_code,
            v_optional_type,
            v_score_type,
            v_compulsory_type,
            v_status_name,
            v_descriptions;
        IF cur_school_super%notfound THEN
            INSERT INTO school_super (
                school_code,
                batch_no#,
                class_code,
                super_code,
                pseudo_name,
                serial_no,
                part_name,
                ranking_type,
                category_code,
                optional_type,
                score_type,
                compulsory_type,
                status_name,
                descriptions
            ) VALUES (
                indx.school_code,
                indx.batch_no#,
                indx.class_code,
                indx.super_code,
                indx.pseudo_name,
                indx.serial_no,
                indx.part_name,
                indx.ranking_type,
                indx.category_code,
                indx.optional_type,
                indx.score_type,
                indx.compulsory_type,
                indx.status_name,
                indx.descriptions
            );
        END IF;
        CLOSE cur_school_super;
    END LOOP;
END;</source>
</StoredProcedureOraclev10g>