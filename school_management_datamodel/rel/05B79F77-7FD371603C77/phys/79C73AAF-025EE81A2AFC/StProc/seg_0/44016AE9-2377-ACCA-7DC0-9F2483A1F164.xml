<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureOraclev10g class="oracle.dbtools.crest.model.design.storage.oracle.v10g.StoredProcedureOraclev10g" name="proc_school_subject_auto" directorySegmentName="seg_0" id="44016AE9-2377-ACCA-7DC0-9F2483A1F164">
<createdBy>leads</createdBy>
<createdTime>2021-07-29 07:08:45 UTC</createdTime>
<ownerDesignName>school_management_datamodel</ownerDesignName>
<source>CREATE OR REPLACE PROCEDURE proc_school_subject_auto AS
    ---declaration of variables
    v_school_code  school_subject.school_code%TYPE;
    v_batch_no#    school_subject.batch_no#%TYPE;
    v_class_code   school_subject.class_code%TYPE;
    v_subject_code school_subject.subject_code%TYPE;
    v_pseudo_name  school_subject.pseudo_name%TYPE;
    v_serial_no    school_subject.serial_no%TYPE;
    v_super_code   school_subject.super_code%TYPE;
    v_status_name  school_subject.status_name%TYPE;
    v_descriptions school_subject.descriptions%TYPE;

    ---cursor
    CURSOR cur IS
    SELECT
        ssub.school_code,
        add_months(ssub.batch_no#, 12) AS batch_no#,
        ssub.class_code,
        ssub.subject_code,
        ssub.pseudo_name,
        ssub.serial_no,
        ssub.super_code,
        ssub.status_name,
        ssub.descriptions
    FROM
             school_subject ssub
        INNER JOIN school_class scls
        ON ( scls.school_code = ssub.school_code
             AND scls.class_code = ssub.class_code )
    WHERE
            ssub.status_name = &apos;ACTIVE&apos;
        AND scls.status_name = &apos;ACTIVE&apos;
        AND ssub.batch_no# = ( SELECT
                                   MAX(batch_no#)
                               FROM
                                   school_subject
                               WHERE
                                       status_name = &apos;ACTIVE&apos;
                                   AND school_code = ssub.school_code
                                   AND class_code = ssub.class_code
                                   AND subject_code = ssub.subject_code
                             );
    CURSOR cur_school_subject (
        p_school_code  VARCHAR2,
        p_batch_no     DATE,
        p_class_code   VARCHAR2,
        p_subject_code VARCHAR2
    ) IS
    SELECT
        school_code,
        batch_no#,
        class_code,
        subject_code,
        pseudo_name,
        serial_no,
        super_code,
        status_name,
        descriptions
    FROM
        school_subject ssub
    WHERE
            school_code = p_school_code
        AND batch_no# = p_batch_no
        AND class_code = p_class_code
        AND subject_code = p_subject_code;
BEGIN
    FOR indx IN cur LOOP
        OPEN cur_school_subject(p_school_code =&gt; indx.school_code, p_batch_no =&gt; indx.batch_no#, p_class_code =&gt; indx.class_code, p_subject_code =&gt; indx.subject_code);
        FETCH cur_school_subject INTO
            v_school_code,
            v_batch_no#,
            v_class_code,
            v_subject_code,
            v_pseudo_name,
            v_serial_no,
            v_super_code,
            v_status_name,
            v_descriptions;
        IF cur_school_subject%notfound THEN
            INSERT INTO school_subject (
                school_code,
                batch_no#,
                class_code,
                subject_code,
                pseudo_name,
                serial_no,
                super_code,
                status_name,
                descriptions
            ) VALUES (
                indx.school_code,
                indx.batch_no#,
                indx.class_code,
                indx.subject_code,
                indx.pseudo_name,
                indx.serial_no,
                indx.super_code,
                indx.status_name,
                indx.descriptions
            );
        END IF;
        CLOSE cur_school_subject;
    END LOOP;
END;</source>
</StoredProcedureOraclev10g>