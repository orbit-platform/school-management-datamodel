<?xml version = '1.0' encoding = 'UTF-8'?>
<TriggerOraclev10g class="oracle.dbtools.crest.model.design.storage.oracle.v10g.TriggerOraclev10g" name="company_weeklyoff_comhol_trg" directorySegmentName="seg_8" id="C4C7AAFA-ACF8-1213-C3F7-BE94F6D2437A">
<createdBy>leads</createdBy>
<createdTime>2022-05-11 11:13:46 UTC</createdTime>
<ownerDesignName>school_management_datamodel</ownerDesignName>
<actions>INSERT, UPDATE, DELETE</actions>
<body><![CDATA[COMPOUND TRIGGER
    ---declaration of record type
    TYPE company_weeklyoff_rt IS RECORD (
        v_company_code    company_weeklyoff.company_code%TYPE,
        v_batch_no        company_weeklyoff.batch_no#%TYPE,
        v_department_code company_weeklyoff.department_code%TYPE,
        v_week_no         company_weeklyoff.week_no#%TYPE,
        v_weekday_name    company_weeklyoff.weekday_name%TYPE,
        v_status_name     company_weeklyoff.status_name%TYPE,
        v_descriptions    company_weeklyoff.descriptions%TYPE
    );
    TYPE t_company_weeklyoff IS
        TABLE OF company_weeklyoff_rt INDEX BY PLS_INTEGER;

    ---global variable
    g_company_weeklyoff t_company_weeklyoff;
    v_index             PLS_INTEGER := 0;
    v_threshhold        CONSTANT SIMPLE_INTEGER := 5; --maximum number of rows to write in one go

    ---variables declared here have firing-statement duration.
    PROCEDURE flush_logs IS
        ---declaration of variables
        v_company_code    company_holiday.company_code%TYPE;
        v_batch_no        company_holiday.batch_no#%TYPE;
        v_department_code company_holiday.department_code%TYPE;
        v_holiday_date    company_holiday.holiday_date%TYPE;
        v_holiday_type    company_holiday.holiday_type%TYPE;
        v_event_code      company_holiday.event_code%TYPE;
        v_event_name      company_holiday.event_name%TYPE;
        v_status_name     company_holiday.status_name%TYPE;
        v_descriptions    company_holiday.descriptions%TYPE;

        ---cursor school_weeklyoff
        CURSOR cur_company_weeklyoff (
            p_company_code    VARCHAR2,
            p_batch_no        DATE,
            p_department_code VARCHAR2,
            p_week_no         VARCHAR2,
            p_weekday_name    VARCHAR2,
            p_status_name     VARCHAR2,
            p_descriptions    VARCHAR2
        ) IS
        SELECT
            csess.company_code AS company_code,
            csess.batch_no# AS batch_no#,
            csess.department_code AS department_code,
            csess.effective_from + delta AS holiday_date,
            'NON-WORKING DAY' AS holiday_type,
            '011' AS event_code,
            'WEEKLY OFF' AS event_name,
            p_status_name AS status_name,
            p_descriptions AS descriptions
        FROM
            company_session csess,
            ( SELECT
                  level - 1 AS delta
              FROM
                  dual
              CONNECT BY
                  level - 1 <= ( SELECT
                                     MAX(effective_upto - effective_from)
                                 FROM
                                     company_session
                                 WHERE
                                         company_code = p_company_code
                                     AND batch_no# = p_batch_no
                               )
            )
        WHERE
                csess.effective_from + delta < csess.effective_upto + 1
            AND csess.company_code = p_company_code
            AND csess.batch_no# = p_batch_no
            AND csess.department_code = p_department_code
            AND to_char(csess.effective_from + delta, 'fmW') = p_week_no
            AND upper(to_char(csess.effective_from + delta, 'fmday')) = upper(p_weekday_name);

        ---cursor school_holiday
        CURSOR cur_company_holiday (
            p_company_code    VARCHAR2,
            p_department_code VARCHAR2,
            p_holiday_date    DATE
        ) IS
        SELECT
            company_code,
            batch_no#,
            department_code,
            holiday_date,
            holiday_type,
            event_code,
            event_name,
            status_name,
            descriptions
        FROM
            company_holiday
        WHERE
                company_code = p_company_code
            AND department_code = p_department_code
            AND holiday_date = p_holiday_date;

        ---declaration of record variable
        v_updates         CONSTANT PLS_INTEGER := g_company_weeklyoff.count();
    BEGIN
        FOR v_count IN 1..v_updates LOOP
            FOR indx IN cur_company_weeklyoff(
                p_company_code => g_company_weeklyoff(v_count).v_company_code, 
                p_batch_no => g_company_weeklyoff(v_count).v_batch_no, 
                p_department_code => g_company_weeklyoff(v_count).v_department_code, 
                p_week_no => g_company_weeklyoff(v_count).v_week_no, 
                p_weekday_name => g_company_weeklyoff(v_count).v_weekday_name,
                p_status_name => g_company_weeklyoff(v_count).v_status_name, 
                p_descriptions => g_company_weeklyoff(v_count).v_descriptions) LOOP
                
                ---cursor opening
                OPEN cur_company_holiday(
                    p_company_code => indx.company_code, 
                    p_department_code => indx.department_code, 
                    p_holiday_date => indx.holiday_date);
                FETCH cur_company_holiday INTO
                    v_company_code,
                    v_batch_no,
                    v_department_code,
                    v_holiday_date,
                    v_holiday_type,
                    v_event_code,
                    v_event_name,
                    v_status_name,
                    v_descriptions;
                    
                IF inserting THEN
                    IF cur_company_holiday%notfound THEN
                        INSERT INTO company_holiday (
                            company_code,
                            batch_no#,
                            department_code,
                            holiday_date,
                            holiday_type,
                            event_code,
                            event_name,
                            status_name,
                            descriptions
                        ) VALUES (
                            indx.company_code,
                            indx.batch_no#,
                            indx.department_code,
                            indx.holiday_date,
                            indx.holiday_type,
                            indx.event_code,
                            indx.event_name,
                            indx.status_name,
                            indx.descriptions
                        );
                    END IF;
                END IF;
                IF updating THEN
                    IF cur_company_holiday%notfound THEN
                        INSERT INTO company_holiday (
                            company_code,
                            batch_no#,
                            department_code,
                            holiday_date,
                            holiday_type,
                            event_code,
                            event_name,
                            status_name,
                            descriptions
                        ) VALUES (
                            indx.company_code,
                            indx.batch_no#,
                            indx.department_code,
                            indx.holiday_date,
                            indx.holiday_type,
                            indx.event_code,
                            indx.event_name,
                            indx.status_name,
                            indx.descriptions
                        );
                    END IF;
                    IF cur_company_holiday%found THEN
                        UPDATE company_holiday
                        SET
                            event_code = indx.event_code,
                            event_name = indx.event_name,
                            status_name = indx.status_name,
                            descriptions = indx.descriptions
                        WHERE
                                company_code = indx.company_code
                            AND department_code = indx.department_code
                            AND holiday_date = indx.holiday_date
                            AND event_code = indx.event_code;
                    END IF;
                END IF;
                IF deleting THEN
                    IF cur_company_holiday%found THEN
                        DELETE FROM company_holiday
                        WHERE
                                company_code = indx.company_code
                            AND department_code = indx.department_code
                            AND holiday_date = indx.holiday_date
                            AND event_code = indx.event_code;
                    END IF;
                END IF;
                CLOSE cur_company_holiday;
            END LOOP;
        END LOOP;

        ---delete the records
        g_company_weeklyoff.DELETE();
        --resetting threshold for next bulk-insert.
        v_index := 0;
    END flush_logs;
    AFTER EACH ROW IS BEGIN
        IF inserting THEN
            v_index := v_index + 1;
            g_company_weeklyoff(v_index).v_company_code := :new.company_code;
            g_company_weeklyoff(v_index).v_batch_no := :new.batch_no#;
            g_company_weeklyoff(v_index).v_department_code := :new.department_code;
            g_company_weeklyoff(v_index).v_week_no := :new.week_no#;
            g_company_weeklyoff(v_index).v_weekday_name := :new.weekday_name;
            g_company_weeklyoff(v_index).v_status_name := :new.status_name;
            g_company_weeklyoff(v_index).v_descriptions := :new.descriptions;
        END IF;
        IF updating THEN
            IF ( :new.status_name <> :old.status_name OR nvl(:new.descriptions, 'na') <> nvl(:old.descriptions, 'na') ) THEN
                v_index := v_index + 1;
                g_company_weeklyoff(v_index).v_company_code := :old.company_code;
                g_company_weeklyoff(v_index).v_batch_no := :old.batch_no#;
                g_company_weeklyoff(v_index).v_department_code := :old.department_code;
                g_company_weeklyoff(v_index).v_week_no := :old.week_no#;
                g_company_weeklyoff(v_index).v_weekday_name := :old.weekday_name;
                g_company_weeklyoff(v_index).v_status_name := :new.status_name;
                g_company_weeklyoff(v_index).v_descriptions := :new.descriptions;
            END IF;
        END IF;
        IF deleting THEN
            v_index := v_index + 1;
            g_company_weeklyoff(v_index).v_company_code := :old.company_code;
            g_company_weeklyoff(v_index).v_batch_no := :old.batch_no#;
            g_company_weeklyoff(v_index).v_department_code := :old.department_code;
            g_company_weeklyoff(v_index).v_week_no := :old.week_no#;
            g_company_weeklyoff(v_index).v_weekday_name := :old.weekday_name;
            g_company_weeklyoff(v_index).v_status_name := :old.status_name;
            g_company_weeklyoff(v_index).v_descriptions := :old.descriptions;
        END IF;
        IF v_index >= v_threshhold THEN
            flush_logs();
        END IF;
    END AFTER EACH ROW;
    AFTER STATEMENT IS BEGIN
        flush_logs();
    END AFTER STATEMENT;
END company_weeklyoff_comhol_trg;]]></body>
<triggerTime>COMPOUND</triggerTime>
<columns>C86C6A03-8DA8-73F1-C6A6-4B1B01D8EC27, 278A58AD-6674-2CC3-4B34-17E65BBC4280, 4ABC8C35-9033-3476-C977-C6B7053C3886, 074E6974-53FF-AC33-A014-2B9B85838819, 11A0015A-AD16-85F4-F9DB-CE25A24FF778, 40B7E29D-EC1C-7D43-531B-BD359451E5A5, 94968AD7-BCED-4FFA-A908-80D9D1522BAA</columns>
<table>6DAD8757-2759-1278-5076-0BAC90FEA879</table>
</TriggerOraclev10g>