<?xml version = '1.0' encoding = 'UTF-8'?>
<TriggerOraclev10g class="oracle.dbtools.crest.model.design.storage.oracle.v10g.TriggerOraclev10g" name="school_holiday_stdhol_trg" directorySegmentName="seg_7" id="E5274D64-B079-6DC7-DF1B-AAD7DDC60CA8">
<createdBy>leads</createdBy>
<createdTime>2021-10-29 08:27:29 UTC</createdTime>
<ownerDesignName>school_management_datamodel</ownerDesignName>
<actions>INSERT, UPDATE, DELETE</actions>
<body><![CDATA[COMPOUND TRIGGER
    ---declaration of record type
    TYPE school_holiday_rt IS RECORD (
        v_school_code  school_holiday.school_code%TYPE,
        v_batch_no     school_holiday.batch_no#%TYPE,
        v_class_code   school_holiday.class_code%TYPE,
        v_stream_code  school_holiday.stream_code%TYPE,
        v_section_code school_holiday.section_code%TYPE,
        v_holiday_date school_holiday.holiday_date%TYPE,
        v_holiday_type school_holiday.holiday_type%TYPE,
        v_status_name  school_holiday.status_name%TYPE,
        v_descriptions school_holiday.descriptions%TYPE
    );

    ---declaration of type
    TYPE t_school_holiday IS
        TABLE OF school_holiday_rt INDEX BY PLS_INTEGER;

    ---declaration of global variable
    g_school_holiday t_school_holiday;

    ---declaration of record variable
    v_updates        CONSTANT PLS_INTEGER := g_school_holiday.count();

    ---index initialization
    v_index          PLS_INTEGER := 0;

    --maximum number of rows to write in one go
    v_threshhold     CONSTANT SIMPLE_INTEGER := 5;

    ---procedure 
    PROCEDURE proc_flush_logs IS

        ---variables
        v_school_code  std_working_day.school_code%TYPE;
        v_batch_no     std_working_day.batch_no#%TYPE;
        v_class_code   std_working_day.class_code%TYPE;
        v_stream_code  std_working_day.stream_code%TYPE;
        v_student_id   std_working_day.student_id%TYPE;
        v_year_date    std_working_day.year_date%TYPE;
        v_day_type     std_working_day.day_type%TYPE;
        v_special_type std_working_day.special_type%TYPE;
        v_status_name  std_working_day.status_name%TYPE;
        v_descriptions std_working_day.descriptions%TYPE;

        ---declaration of record variable
        v_updates      CONSTANT PLS_INTEGER := g_school_holiday.count();

        ---cursor school_holiday
        CURSOR cur_school_holiday (
            p_school_code  VARCHAR2,
            p_batch_no     DATE,
            p_class_code   VARCHAR2,
            p_stream_code  VARCHAR2,
            p_section_code VARCHAR2,
            p_holiday_date DATE
        ) IS
        SELECT
            scs.school_code AS school_code,
            scs.batch_no# AS batch_no,
            scs.class_code AS class_code,
            scs.stream_code AS stream_code,
            scs.student_id AS student_id,
            ydt.day AS year_date,
            nvl(schol.holiday_type, 'WORKING DAY') AS day_type,
            'NO' AS special_type,
            'ACTIVE' AS status_name,
            schol.descriptions
        FROM
                 student std
            INNER JOIN std_class_sec scs
            ON ( scs.school_code = std.school_code
                 AND scs.student_id = std.id )
            INNER JOIN school_batch sbat
            ON ( sbat.school_code = scs.school_code
                 AND sbat.batch_no# = scs.batch_no# )
            CROSS JOIN year_date ydt
            LEFT OUTER JOIN school_holiday schol
            ON ( schol.school_code = scs.school_code
                 AND schol.batch_no# = scs.batch_no#
                 AND schol.class_code = scs.class_code
                 AND schol.stream_code = scs.stream_code
                 AND schol.section_code = scs.section_code
                 AND schol.holiday_date = p_holiday_date )
        WHERE
            ydt.day BETWEEN sbat.effective_from AND sbat.effective_upto
            AND scs.school_code = p_school_code
            AND scs.batch_no# = p_batch_no
            AND scs.class_code = p_class_code
            AND scs.stream_code = p_stream_code
            AND scs.section_code = p_section_code
        ORDER BY
            scs.school_code,
            scs.batch_no#,
            scs.class_code,
            scs.stream_code,
            scs.section_code,
            scs.student_id,
            ydt.day;

        ---cursor std_holiday
        CURSOR cur_std_working_day (
            p_school_code VARCHAR2,
            p_class_code  VARCHAR2,
            p_stream_code VARCHAR2,
            p_student_id  VARCHAR2,
            p_year_date   DATE
        ) IS
        SELECT
            school_code,
            batch_no#,
            class_code,
            stream_code,
            student_id,
            year_date,
            day_type,
            special_type,
            status_name,
            descriptions
        FROM
            std_working_day
        WHERE
                school_code = p_school_code
            AND class_code = p_class_code
            AND stream_code = p_stream_code
            AND student_id = p_student_id
            AND year_date = p_year_date;
    BEGIN
        FOR v_count IN 1..v_updates LOOP
            FOR indx IN cur_school_holiday(p_school_code => g_school_holiday(v_count).v_school_code, p_batch_no => g_school_holiday(v_count).v_batch_no, p_class_code => g_school_holiday(v_count).v_class_code, p_stream_code => g_school_holiday(v_count).v_stream_code, p_section_code => g_school_holiday(v_count
            ).v_section_code,
                                          p_holiday_date => g_school_holiday(v_count).v_holiday_date) LOOP

                ---open cursor
                OPEN cur_std_working_day(p_school_code => indx.school_code, p_class_code => indx.class_code, p_stream_code => indx.stream_code, p_student_id => indx.student_id, p_year_date => indx.year_date);

                ---fetch
                FETCH cur_std_working_day INTO
                    v_school_code,
                    v_batch_no,
                    v_class_code,
                    v_stream_code,
                    v_student_id,
                    v_year_date,
                    v_day_type,
                    v_special_type,
                    v_status_name,
                    v_descriptions;

                ---inserting
                IF inserting THEN
                    IF cur_std_working_day%notfound THEN
                        INSERT INTO std_working_day (
                            school_code,
                            batch_no#,
                            class_code,
                            stream_code,
                            student_id,
                            year_date,
                            day_type,
                            special_type,
                            status_name,
                            descriptions
                        ) VALUES (
                            indx.school_code,
                            indx.batch_no,
                            indx.class_code,
                            indx.stream_code,
                            indx.student_id,
                            indx.year_date,
                            indx.day_type,
                            indx.special_type,
                            indx.status_name,
                            indx.descriptions
                        );
                    END IF;
                END IF; ---end inserting

                ---updating
                IF updating THEN
                    IF cur_std_working_day%found THEN
                        IF v_special_type = 'NO' THEN
                            IF ( v_day_type <> indx.day_type OR v_special_type <> indx.special_type OR v_status_name <> indx.status_name OR nvl(v_descriptions, 'na') <> nvl(indx.descriptions, 'na') ) THEN
                                UPDATE std_working_day
                                SET
                                    day_type = indx.day_type,
                                    status_name = indx.status_name,
                                    descriptions = indx.descriptions
                                WHERE
                                        school_code = v_school_code
                                    AND class_code = v_class_code
                                    AND stream_code = v_stream_code
                                    AND student_id = v_student_id
                                    AND year_date = v_year_date;
                            END IF;
                        END IF;
                    END IF;

                    ---inserting missing 
                    IF cur_std_working_day%notfound THEN
                        INSERT INTO std_working_day (
                            school_code,
                            batch_no#,
                            class_code,
                            stream_code,
                            student_id,
                            year_date,
                            day_type,
                            special_type,
                            status_name,
                            descriptions
                        ) VALUES (
                            indx.school_code,
                            indx.batch_no,
                            indx.class_code,
                            indx.stream_code,
                            indx.student_id,
                            indx.year_date,
                            indx.day_type,
                            indx.special_type,
                            indx.status_name,
                            indx.descriptions
                        );
                    END IF;
                END IF; ---end updating

                ---deleting
                IF deleting THEN
                    IF cur_std_working_day%found THEN
                        IF v_special_type = 'NO' THEN
                            DELETE FROM std_working_day
                            WHERE
                                    school_code = indx.school_code
                                AND class_code = indx.class_code
                                AND stream_code = indx.stream_code
                                AND student_id = indx.student_id
                                AND year_date = indx.year_date;
                        END IF;
                    END IF;
                END IF;
                CLOSE cur_std_working_day;---close cur_std_working_day
            END LOOP; ---cur_school_holiday
        END LOOP; ---v_count

        ---delete the records
        g_school_holiday.DELETE();

        --resetting threshold for next bulk-insert.
        v_index := 0;
    END proc_flush_logs;
    AFTER EACH ROW IS BEGIN
        IF inserting THEN
            v_index := v_index + 1;
            g_school_holiday(v_index).v_school_code := :new.school_code;
            g_school_holiday(v_index).v_batch_no := :new.batch_no#;
            g_school_holiday(v_index).v_class_code := :new.class_code;
            g_school_holiday(v_index).v_stream_code := :new.stream_code;
            g_school_holiday(v_index).v_holiday_date := :new.holiday_date;
            g_school_holiday(v_index).v_holiday_type := :new.holiday_type;
            g_school_holiday(v_index).v_status_name := :new.status_name;
            g_school_holiday(v_index).v_descriptions := :new.descriptions;
        END IF;
        IF updating THEN
            v_index := v_index + 1;
            g_school_holiday(v_index).v_school_code := :old.school_code;
            g_school_holiday(v_index).v_batch_no := :old.batch_no#;
            g_school_holiday(v_index).v_class_code := :old.class_code;
            g_school_holiday(v_index).v_stream_code := :old.stream_code;
            g_school_holiday(v_index).v_holiday_date := :old.holiday_date;
            g_school_holiday(v_index).v_holiday_type := :new.holiday_type;
            g_school_holiday(v_index).v_status_name := :new.status_name;
            g_school_holiday(v_index).v_descriptions := :new.descriptions;
        END IF;
        IF deleting THEN
            v_index := v_index + 1;
            g_school_holiday(v_index).v_school_code := :old.school_code;
            g_school_holiday(v_index).v_batch_no := :old.batch_no#;
            g_school_holiday(v_index).v_class_code := :old.class_code;
            g_school_holiday(v_index).v_stream_code := :old.stream_code;
            g_school_holiday(v_index).v_holiday_date := :old.holiday_date;
            g_school_holiday(v_index).v_holiday_type := :old.holiday_type;
            g_school_holiday(v_index).v_status_name := :old.status_name;
            g_school_holiday(v_index).v_descriptions := :old.descriptions;
        END IF;

        ---threshold
        IF v_index >= v_threshhold THEN
            proc_flush_logs();
        END IF;
    END AFTER EACH ROW;
    AFTER STATEMENT IS BEGIN
        proc_flush_logs();
    END AFTER STATEMENT;
END school_holiday_stdhol_trg;]]></body>
<triggerTime>COMPOUND</triggerTime>
<columns>5D82D1AD-CD31-68D5-7D9E-687ED8C6D39E, 6760D243-144A-7336-82C9-A3D62EBCC4F9, 7BB9020B-C988-4ADC-ACEB-5E6FDD85F46E, 58B3F9DD-4B01-E022-B4A6-DB18AED907AE, 031C785A-F865-B7AA-19E8-17BC0CB8BFA4, 6A2A07C1-6FD7-CE43-8F8F-5F1DB648224B, 6A837F3E-AFA1-0C33-AB5B-D39EBA021F38, 5EA5E025-45E2-349F-A8E2-0A2CFEF7B28F, DD2ED114-8C23-4C5A-AB43-C2EDA5122038, B03D09C1-0934-37EF-F330-4734FF7ACB58, E8B2EEDF-0A2F-205A-DB69-F6FBEE66C371, 4363ED8E-524A-810C-C0ED-25E23082F34B</columns>
<table>FFA87680-7335-88A2-0704-37D61F481C5B</table>
</TriggerOraclev10g>
