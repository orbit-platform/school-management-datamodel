<?xml version = '1.0' encoding = 'UTF-8'?>
<SnapshotOraclev11g class="oracle.dbtools.crest.model.design.storage.oracle.v11g.SnapshotOraclev11g" name="mvc_std_score" directorySegmentName="seg_0" id="7CF0F28C-99CB-65AB-4028-2ABC9CDC6706">
<createdBy>leads</createdBy>
<createdTime>2021-08-12 04:39:57 UTC</createdTime>
<comment><![CDATA[This is used for report generation]]></comment>
<commentInRDBMS><![CDATA[This is used for report generation]]></commentInRDBMS>
<notes><![CDATA[This is used for report generation]]></notes>
<ownerDesignName>school_management_datamodel</ownerDesignName>
<defaultSegment>YES</defaultSegment>
<nextDate>sysdate + (60 * 24 * 30)/1440</nextDate>
<refresh>YES</refresh>
<refreshType>FORCE</refreshType>
<startDate>sysdate</startDate>
<subquery><![CDATA[SELECT
    sterm.school_code AS school_code,
    sterm.batch_no# AS batch_no,
    sterm.class_code AS class_code,
    sterm.stream_code AS stream_code,
    scs.section_code AS section_code,
    sterm.term_code AS term_code,
    scs.student_id AS student_id,
    nvl(sfs.part_name, ssup.part_name) AS part_name,
    nvl(sfs.ranking_type, ssup.ranking_type) AS ranking_type,
    scat.academic_code AS academic_code,
    nvl(sfs.category_code, ssup.category_code) AS category_code,
    sdom.domain_code AS domain_code,
    scat.pseudo_name AS domain,
    ssubj.super_code AS super_code,
    supsub.pseudo AS super_subject,
    csub.subject_code AS subject_code,
    ssubj.pseudo_name AS subject,
    ssup.score_type AS score_type,
    ssup.optional_type AS optional_type,
    salloc.examination_type AS examination_type,
    nvl(overall.overall_status, 'PASSED') AS overall_status,
    SUM(salloc.max_mark *(csub.ratio_ant / csub.ratio_con)) AS max_mark,
    SUM(salloc.min_mark *(csub.ratio_ant / csub.ratio_con)) AS pass_mark,
    SUM(csub.ratio_ant / csub.ratio_con * sa.score * salloc.max_mark / sa.maxmark) AS mark_obtained
FROM
         school_term sterm
    INNER JOIN school_super ssup
    ON ( ssup.school_code = sterm.school_code
         AND ssup.batch_no# = sterm.batch_no#
         AND ssup.class_code = sterm.class_code
         AND ssup.stream_code = sterm.stream_code )
    INNER JOIN super_subject supsub
    ON ( supsub.code = ssup.super_code )
    INNER JOIN subject_category scat
    ON ( scat.code = ssup.category_code )
    INNER JOIN academic_category acat
    ON ( acat.code = scat.academic_code )
    INNER JOIN school_subject ssubj
    ON ( ssubj.school_code = sterm.school_code
         AND ssubj.batch_no# = sterm.batch_no#
         AND ssubj.class_code = sterm.class_code
         AND ssubj.stream_code = sterm.stream_code
         AND ssup.super_code = ssubj.super_code )
    INNER JOIN subject_domain sdom
    ON ( sdom.school_code = sterm.school_code
         AND sdom.class_code = sterm.class_code
         AND sdom.stream_code = sterm.stream_code
         AND sdom.subject_code = ssubj.subject_code )
    INNER JOIN class_subject csub
    ON ( csub.school_code = sterm.school_code
         AND csub.batch_no# = sterm.batch_no#
         AND csub.class_code = sterm.class_code
         AND csub.stream_code = sterm.stream_code
         AND csub.term_code = sterm.term_code
         AND csub.subject_code = ssubj.subject_code )
    INNER JOIN mv_std_score_alloc salloc
    ON ( salloc.school_code = csub.school_code
         AND salloc.batch_no = csub.batch_no#
         AND salloc.class_code = csub.class_code
         AND salloc.stream_code = csub.stream_code
         AND salloc.term_code = csub.term_code
         AND salloc.super_code = ssubj.super_code )
    INNER JOIN student std
    ON ( std.school_code = sterm.school_code
         AND std.id = salloc.student_id )
    INNER JOIN std_subject ssub
    ON ( ssub.school_code = sterm.school_code
         AND ssub.batch_no# = sterm.batch_no#
         AND ssub.class_code = sterm.class_code
         AND ssub.stream_code = sterm.stream_code
         AND ssub.term_code = sterm.term_code
         AND ssub.subject_code = csub.subject_code
         AND ssub.student_id = std.id )
    INNER JOIN std_class_sec scs
    ON ( scs.batch_no# = csub.batch_no#
         AND scs.class_code = csub.class_code
         AND scs.stream_code = csub.stream_code
         AND ssub.student_id = scs.student_id )
    LEFT OUTER JOIN mv_std_assessment sa
    ON ( sa.school_code = sterm.school_code
         AND sa.batch_no# = sterm.batch_no#
         AND sa.class_code = scs.class_code
         AND sa.stream_code = scs.stream_code
         AND sa.term_code = sterm.term_code
         AND sa.subject_code = ssub.subject_code
         AND sa.evaluation_code = salloc.evaluation_code
         AND sa.student_id = scs.student_id )
    LEFT OUTER JOIN mv_std_fourth_sub sfs
    ON ( sfs.school_code = sterm.school_code
         AND sfs.batch_no# = sterm.batch_no#
         AND sfs.class_code = sterm.class_code
         AND sfs.stream_code = sterm.stream_code
         AND sfs.term_code = sterm.term_code
         AND sfs.student_id = scs.student_id
         AND sfs.super_code = ssubj.super_code )
    LEFT OUTER JOIN mv_std_overall_passed overall
    ON ( overall.school_code = sterm.school_code
         AND overall.batch_no = sterm.batch_no#
         AND overall.class_code = sterm.class_code
         AND overall.stream_code = sterm.stream_code
         AND overall.term_code = sterm.term_code
         AND overall.student_id = scs.student_id )
WHERE
        sterm.status_name = 'ACTIVE'
    AND ssubj.status_name = 'ACTIVE'
    AND ssub.status_name = 'ACTIVE'
    AND csub.status_name = 'ACTIVE'
    AND scs.status_name = 'ACTIVE'
    AND salloc.status_name = 'ACTIVE'
GROUP BY
    sterm.school_code,
    sterm.batch_no#,
    sterm.class_code,
    sterm.stream_code,
    scs.section_code,
    sterm.term_code,
    scs.student_id,
    nvl(sfs.part_name, ssup.part_name),
    nvl(sfs.ranking_type, ssup.ranking_type),
    scat.academic_code,
    nvl(sfs.category_code, ssup.category_code),
    sdom.domain_code,
    scat.pseudo_name,
    ssubj.super_code,
    supsub.pseudo,
    csub.subject_code,
    ssubj.pseudo_name,
    ssup.score_type,
    ssup.optional_type,
    salloc.examination_type,
    nvl(overall.overall_status, 'PASSED')]]></subquery>
<subqueryNeedsMigration>false</subqueryNeedsMigration>
<with>ROWID</with>
</SnapshotOraclev11g>