<?xml version = '1.0' encoding = 'UTF-8'?>
<SnapshotOraclev11g class="oracle.dbtools.crest.model.design.storage.oracle.v11g.SnapshotOraclev11g" name="v_std_overall_passed" directorySegmentName="seg_0" id="DB08761A-F988-8FC2-1182-182F80203898">
<createdBy>leads</createdBy>
<createdTime>2021-08-12 04:25:27 UTC</createdTime>
<comment><![CDATA[This materialized view will give the overall passed or failed status]]></comment>
<commentInRDBMS><![CDATA[This materialized view will give the overall passed or failed status]]></commentInRDBMS>
<notes><![CDATA[This materialized view will give the overall passed or failed status]]></notes>
<ownerDesignName>school_management_datamodel</ownerDesignName>
<build>DEFERRED</build>
<defaultSegment>NO</defaultSegment>
<nextDate>sysdate + (60*24*60)/1440</nextDate>
<refresh>YES</refresh>
<refreshType>FORCE</refreshType>
<startDate>sysdate</startDate>
<subquery><![CDATA[SELECT
        school_code,
        batch_no,
        class_code,
        stream_code,
        term_code,
        student_id,
        overall_status
    FROM
        ( SELECT
              school_code,
              batch_no# AS batch_no,
              class_code,
              stream_code,
              term_code,
              student_id,
              status AS overall_status,
              ROW_NUMBER()
              OVER(PARTITION BY school_code, batch_no#, class_code, stream_code, term_code,
                                student_id
                   ORDER BY
                       (
                           CASE
                               WHEN status = 'FAILED' THEN
                                   1
                               WHEN status = 'PASSED' THEN
                                   2
                           END
                       )
              ) AS my_count
          FROM
              ( SELECT
                        arc.school_code,
                        arc.batch_no#,
                        arc.class_code,
                        arc.stream_code,
                        arc.term_code,
                        arc.student_id,
                        arc.super_code,
                        ( SUM(arc.score_main) + SUM(arc.score_internal) ) AS score,
                        ( SUM(arc.max_main) + SUM(arc.max_internal) ) AS maximum,
                        (
                            CASE
                                WHEN SUM(round(nvl(arc.min_main, 0))) > SUM(round(nvl(arc.score_main, 0)))                                                                                         THEN
                                    'FAILED'
                                WHEN ( SUM(round(nvl(arc.min_main, 0))) + SUM(round(nvl(arc.min_internal, 0))) ) > ( SUM(round(nvl(arc.score_main, 0))) + SUM(round(nvl(arc.score_internal, 0))) ) THEN
                                    'FAILED'
                                ELSE
                                    'PASSED'
                            END
                        ) AS status,
                        (
                            CASE
                                WHEN sp.super_code IS NOT NULL THEN
                                    'SIMPLE_PASSED'
                                ELSE
                                    'REGULAR'
                            END
                        ) AS special_status
                    FROM
                        arc_std_score arc
                        LEFT OUTER JOIN simple_passed sp
                        ON ( sp.school_code = arc.school_code
                             AND sp.batch_no# = arc.batch_no#
                             AND sp.term_code = arc.term_code
                             AND sp.stream_code = arc.stream_code
                             AND sp.class_code = arc.class_code
                             AND sp.super_code = arc.super_code
                             AND sp.status_name = 'ACTIVE' )
                  WHERE
                      arc.ranking_type = 'YES'
                GROUP BY
                    arc.school_code,
                    arc.batch_no#,
                    arc.class_code,
                    arc.stream_code,
                    arc.term_code,
                    arc.student_id,
                    arc.super_code,
                    sp.super_code
              )
        )
    WHERE
        my_count = 1]]></subquery>
<subqueryNeedsMigration>false</subqueryNeedsMigration>
<with>ROWID</with>
</SnapshotOraclev11g>
