<?xml version = '1.0' encoding = 'UTF-8'?>
<SnapshotOraclev11g class="oracle.dbtools.crest.model.design.storage.oracle.v11g.SnapshotOraclev11g" name="mv_std_overall_passed" directorySegmentName="seg_0" id="DB08761A-F988-8FC2-1182-182F80203898">
<createdBy>leads</createdBy>
<createdTime>2021-08-12 04:25:27 UTC</createdTime>
<comment><![CDATA[This materialized view will give the overall passed or failed status]]></comment>
<commentInRDBMS><![CDATA[This materialized view will give the overall passed or failed status]]></commentInRDBMS>
<notes><![CDATA[This materialized view will give the overall passed or failed status]]></notes>
<ownerDesignName>school_management_datamodel</ownerDesignName>
<build>DEFERRED</build>
<defaultSegment>NO</defaultSegment>
<nextDate>sysdate + (60*24*60)/1440</nextDate>
<refresh>YES</refresh>
<refreshType>FORCE</refreshType>
<startDate>sysdate</startDate>
<subquery><![CDATA[SELECT
    school_code,
    batch_no,
    class_code,
    stream_code,
    term_code,
    student_id,
    CASE
        WHEN simple_passed = 'SIMPLE PASSED'
             AND my_count = 1 THEN
            'SIMPLE PASSED'
        ELSE
            'FAILED'
    END AS overall_status
FROM
    ( SELECT
            school_code,
            batch_no,
            class_code,
            stream_code,
            term_code,
            student_id,
            (
                CASE
                    WHEN EXISTS ( SELECT
                                                    *
                                                FROM
                                                    simple_passed
                                  WHERE
                                          school_code = wd.school_code
                                      AND batch_no# = wd.batch_no
                                      AND class_code = wd.class_code
                                      AND stream_code = wd.stream_code
                                      AND term_code = wd.term_code
                                ) THEN
                        'SIMPLE PASSED'
                    ELSE
                        'REGULAR'
                END
            ) AS simple_passed,
            COUNT(*) AS my_count
        FROM
            ( SELECT
                                scs.school_code AS school_code,
                                csub.batch_no# AS batch_no,
                                csub.class_code AS class_code,
                                csub.stream_code AS stream_code,
                                csub.term_code AS term_code,
                                scs.student_id AS student_id,
                                ssubj.super_code AS super_code
                            FROM
                                     school_term sterm
                                INNER JOIN std_class_sec scs
                                ON ( scs.school_code = sterm.school_code
                                     AND scs.batch_no# = sterm.batch_no#
                                     AND scs.class_code = sterm.class_code
                                     AND scs.stream_code = sterm.stream_code )
                                INNER JOIN class_subject csub
                                ON ( csub.school_code = sterm.school_code
                                     AND csub.batch_no# = sterm.batch_no#
                                     AND csub.class_code = sterm.class_code
                                     AND csub.stream_code = sterm.stream_code
                                     AND csub.term_code = sterm.term_code )
                                INNER JOIN school_subject ssubj
                                ON ( ssubj.school_code = csub.school_code
                                     AND ssubj.batch_no# = csub.batch_no#
                                     AND ssubj.class_code = csub.class_code
                                     AND ssubj.stream_code = csub.stream_code
                                     AND ssubj.subject_code = csub.subject_code )
                                INNER JOIN school_super ssup
                                ON ( ssup.school_code = ssubj.school_code
                                     AND ssup.batch_no# = csub.batch_no#
                                     AND ssup.class_code = ssubj.class_code
                                     AND ssup.stream_code = ssubj.stream_code
                                     AND ssup.super_code = ssubj.super_code )
                                INNER JOIN std_subject ssub
                                ON ( ssub.school_code = csub.school_code
                                     AND ssub.batch_no# = csub.batch_no#
                                     AND ssub.class_code = csub.class_code
                                     AND ssub.stream_code = csub.stream_code
                                     AND ssub.term_code = csub.term_code
                                     AND ssub.subject_code = csub.subject_code
                                     AND ssub.student_id = scs.student_id )
                                INNER JOIN std_score_alloc salloc
                                ON ( salloc.school_code = ssubj.school_code
                                     AND salloc.batch_no# = ssub.batch_no#
                                     AND salloc.class_code = ssub.class_code
                                     AND salloc.stream_code = ssub.stream_code
                                     AND salloc.term_code = ssub.term_code
                                     AND salloc.super_code = ssubj.super_code
                                     AND salloc.student_id = scs.student_id )
                                LEFT OUTER JOIN mv_std_assessment sa
                                ON ( sa.school_code = sterm.school_code
                                     AND sa.batch_no# = sterm.batch_no#
                                     AND sa.class_code = sterm.class_code
                                     AND sa.stream_code = sterm.stream_code
                                     AND sa.term_code = sterm.term_code
                                     AND sa.subject_code = ssub.subject_code
                                     AND sa.evaluation_code = salloc.evaluation_code
                                     AND sa.student_id = scs.student_id )
                                LEFT OUTER JOIN simple_passed sp
                                ON ( sp.school_code = sterm.school_code
                                     AND sp.batch_no# = sterm.batch_no#
                                     AND sp.term_code = sterm.term_code
                                     AND sp.stream_code = sterm.stream_code
                                     AND sp.class_code = sterm.class_code
                                     AND sp.super_code = ssup.super_code
                                     AND sp.status_name = 'ACTIVE' )
                          WHERE
                                  scs.status_name = 'ACTIVE'
                              AND ssubj.status_name = 'ACTIVE'
                              AND ssub.status_name = 'ACTIVE'
                              AND salloc.status_name = 'ACTIVE'
                              AND ssup.status_name = 'ACTIVE'
                              AND ssup.ranking_type = 'YES'
                              AND NOT EXISTS ( SELECT
                                                                    *
                                                                FROM
                                                                    mv_std_fourth_sub vsfs
                                               WHERE
                                                       vsfs.compulsory_type = 'NO'
                                                   AND vsfs.school_code = sterm.school_code
                                                   AND vsfs.batch_no# = sterm.batch_no#
                                                   AND vsfs.class_code = sterm.class_code
                                                   AND vsfs.stream_code = sterm.stream_code
                                                   AND vsfs.term_code = sterm.term_code
                                                   AND vsfs.student_id = scs.student_id
                                                   AND vsfs.super_code = ssubj.super_code
                                             )
                        GROUP BY
                            scs.school_code,
                            csub.batch_no#,
                            csub.class_code,
                            csub.stream_code,
                            csub.term_code,
                            scs.student_id,
                            ssubj.super_code
                      HAVING
                          round(SUM(csub.ratio_ant / csub.ratio_con * salloc.min_mark)) > round(SUM(csub.ratio_ant / csub.ratio_con * nvl(sa.score, 0) * salloc.max_mark / nvl(sa.maxmark, 1)))
                    UNION
                    SELECT
                        csub.school_code AS school_code,
                        csub.batch_no# AS batch_no,
                        csub.class_code AS class_code,
                        csub.stream_code AS stream_code,
                        csub.term_code AS term_code,
                        scs.student_id AS student_id,
                        ssubj.super_code AS super_code
                    FROM
                             school_term sterm
                        INNER JOIN std_class_sec scs
                        ON ( scs.school_code = sterm.school_code
                             AND scs.batch_no# = sterm.batch_no#
                             AND scs.class_code = sterm.class_code
                             AND scs.stream_code = sterm.stream_code )
                        INNER JOIN class_subject csub
                        ON ( csub.school_code = sterm.school_code
                             AND csub.batch_no# = sterm.batch_no#
                             AND csub.class_code = scs.class_code
                             AND csub.stream_code = sterm.stream_code
                             AND csub.term_code = sterm.term_code )
                        INNER JOIN school_subject ssubj
                        ON ( ssubj.school_code = sterm.school_code
                             AND ssubj.batch_no# = sterm.batch_no#
                             AND ssubj.class_code = sterm.class_code
                             AND ssubj.stream_code = sterm.stream_code
                             AND ssubj.subject_code = csub.subject_code )
                        INNER JOIN school_super ssup
                        ON ( ssup.school_code = sterm.school_code
                             AND ssup.batch_no# = sterm.batch_no#
                             AND ssup.class_code = sterm.class_code
                             AND ssup.stream_code = sterm.stream_code
                             AND ssup.super_code = ssubj.super_code )
                        INNER JOIN std_subject ssub
                        ON ( ssub.batch_no# = csub.batch_no#
                             AND ssub.class_code = csub.class_code
                             AND ssub.stream_code = csub.stream_code
                             AND ssub.term_code = csub.term_code
                             AND ssub.subject_code = csub.subject_code
                             AND ssub.student_id = scs.student_id )
                        INNER JOIN std_score_alloc salloc
                        ON ( salloc.school_code = ssubj.school_code
                             AND salloc.batch_no# = ssub.batch_no#
                             AND salloc.class_code = ssub.class_code
                             AND salloc.stream_code = ssub.stream_code
                             AND salloc.term_code = ssub.term_code
                             AND salloc.super_code = ssubj.super_code
                             AND salloc.student_id = scs.student_id )
                        LEFT OUTER JOIN mv_std_assessment sa
                        ON ( sa.school_code = csub.school_code
                             AND sa.batch_no# = csub.batch_no#
                             AND sa.class_code = scs.class_code
                             AND sa.stream_code = scs.stream_code
                             AND sa.term_code = csub.term_code
                             AND sa.subject_code = ssub.subject_code
                             AND sa.evaluation_code = salloc.evaluation_code
                             AND sa.student_id = scs.student_id )
                        LEFT OUTER JOIN simple_passed sp
                        ON ( sp.school_code = sterm.school_code
                             AND sp.batch_no# = sterm.batch_no#
                             AND sp.class_code = sterm.class_code
                             AND sp.stream_code = sterm.stream_code
                             AND sp.term_code = sterm.term_code
                             AND sp.super_code = ssup.super_code
                             AND sp.status_name = 'ACTIVE' )
                  WHERE
                          scs.status_name = 'ACTIVE'
                      AND ssubj.status_name = 'ACTIVE'
                      AND ssub.status_name = 'ACTIVE'
                      AND salloc.status_name = 'ACTIVE'
                      AND ssup.status_name = 'ACTIVE'
                      AND ssup.ranking_type = 'YES'
                      AND salloc.examination_type = 'EXTERNAL'
                      AND NOT EXISTS ( SELECT
                                                            *
                                                        FROM
                                                            mv_std_fourth_sub vsfs
                                       WHERE
                                               vsfs.compulsory_type = 'NO'
                                           AND vsfs.school_code = csub.school_code
                                           AND vsfs.batch_no# = csub.batch_no#
                                           AND vsfs.class_code = csub.class_code
                                           AND vsfs.term_code = csub.term_code
                                           AND vsfs.term_code = csub.term_code
                                           AND vsfs.student_id = scs.student_id
                                           AND vsfs.super_code = ssubj.super_code
                                     )
                GROUP BY
                    csub.school_code,
                    csub.batch_no#,
                    csub.class_code,
                    csub.stream_code,
                    csub.term_code,
                    scs.student_id,
                    ssubj.super_code
              HAVING
                  SUM(csub.ratio_ant / csub.ratio_con * salloc.min_mark) > round(SUM(csub.ratio_ant / csub.ratio_con * nvl(sa.score, 0) * salloc.max_mark / nvl(sa.maxmark, 1)))
            ) wd
      GROUP BY
          school_code,
          batch_no,
          class_code,
          stream_code,
          term_code,
          student_id
    )]]></subquery>
<subqueryNeedsMigration>false</subqueryNeedsMigration>
<with>ROWID</with>
</SnapshotOraclev11g>