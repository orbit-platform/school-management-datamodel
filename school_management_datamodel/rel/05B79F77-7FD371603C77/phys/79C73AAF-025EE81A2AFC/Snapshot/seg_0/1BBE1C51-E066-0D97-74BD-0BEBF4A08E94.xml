<?xml version = '1.0' encoding = 'UTF-8'?>
<SnapshotOraclev11g class="oracle.dbtools.crest.model.design.storage.oracle.v11g.SnapshotOraclev11g" name="vr_score_allocation" directorySegmentName="seg_0" id="1BBE1C51-E066-0D97-74BD-0BEBF4A08E94">
<createdBy>leads</createdBy>
<createdTime>2022-11-21 06:32:32 UTC</createdTime>
<ownerDesignName>school_management_datamodel</ownerDesignName>
<defaultSegment>NO</defaultSegment>
<refreshType>FORCE</refreshType>
<subquery><![CDATA[SELECT
        wd.school_code,
        wd.batch_no,
        wd.class_code,
        wd.stream_code,
        wd.term_code,
        wd.part_name,
        wd.ranking_type,
        wd.score_type,
        wd.optional_type,
        wd.academic_code,
        wd.category_code,
        wd.super_code,
        wd.subject_code,
        scat.pseudo_name AS category,
        ssup.pseudo_name AS super_name,
        nvl2(ssup.pseudo_name,
             nvl2(csub.pseudo_name, csub.pseudo_name, 'Aggregate (' || ssup.pseudo_name || ')'),
             'Grand Aggregate') AS subject,
        nvl(to_char(round(wd.main, 2)),
            '-') AS main,
        nvl(to_char(round(wd.unit, 2)),
            '-') AS unit,
        nvl(to_char(round(wd.asgn, 2)),
            '-') AS asgn,
        nvl(to_char(round(wd.proj, 2)),
            '-') AS proj,
        nvl(to_char(round(wd.oral, 2)),
            '-') AS oral,
        nvl(to_char(round(wd.prac, 2)),
            '-') AS prac,
        nvl(to_char(round(wd.prsn, 2)),
            '-') AS prsn,
        nvl(to_char(round(wd.cwrk, 2)),
            '-') AS cwrk,
        nvl(to_char(round(wd.onln, 2)),
            '-') AS onln,
        round(nvl(wd.main, 0) + nvl(wd.unit, 0) + nvl(wd.asgn, 0) + nvl(wd.proj, 0) + nvl(wd.oral, 0) + nvl(wd.prac, 0) + nvl(wd.prsn, 0) + nvl(wd.cwrk, 0) + nvl(wd.onln, 0),
              2) AS total
    FROM
        ( SELECT
                school_code,
                batch_no,
                class_code,
                stream_code,
                term_code,
                part_name,
                ranking_type,
                score_type,
                optional_type,
                academic_code,
                category_code,
                super_code,
                subject_code,
                SUM(main) AS main,
                SUM(unit) AS unit,
                SUM(asgn) AS asgn,
                SUM(proj) AS proj,
                SUM(oral) AS oral,
                SUM(prac) AS prac,
                SUM(prsn) AS prsn,
                SUM(cwrk) AS cwrk,
                SUM(onln) AS onln,
                GROUPING(part_name) AS grp_part_name,
                GROUPING(academic_code) AS grp_academic_code,
                GROUPING(score_type) AS grp_score_type,
                GROUPING(optional_type) AS grp_optional_type,
                GROUPING(category_code) AS grp_category_code,
                GROUPING(ranking_type) AS grp_ranking_type,
                GROUPING(super_code) AS grp_super_code,
                GROUPING(subject_code) AS grp_subject_code
            FROM
                v_score_allocation wd
          GROUP BY
              school_code,
              batch_no,
              class_code,
              stream_code,
              term_code,
              ranking_type,
              score_type,
              ROLLUP(part_name,
                     academic_code,
                     optional_type,
                     category_code,
                     super_code,
                     subject_code)
        ) wd
        LEFT OUTER JOIN subject_category scat
        ON ( scat.code = wd.category_code )
        LEFT OUTER JOIN school_super ssup
        ON ( ssup.school_code = wd.school_code
             AND ssup.batch_no# = wd.batch_no
             AND ssup.class_code = wd.class_code
             AND ssup.stream_code = wd.stream_code
             AND ssup.super_code = wd.super_code )
        LEFT OUTER JOIN class_subject csub
        ON ( csub.school_code = wd.school_code
             AND csub.batch_no# = wd.batch_no
             AND csub.class_code = wd.class_code
             AND csub.stream_code = wd.stream_code
             AND csub.term_code = wd.term_code
             AND csub.subject_code = wd.subject_code )
    WHERE
        (
            CASE
                WHEN grp_part_name = 0
                     AND grp_academic_code = 0
                     AND grp_score_type = 0
                     AND grp_optional_type = 0
                     AND grp_category_code = 0
                     AND grp_ranking_type = 0
                     AND grp_super_code = 0
                     AND grp_subject_code = 0 THEN
                    1
                WHEN func_subject_cnt(p_school_code => wd.school_code, p_batch_no => wd.batch_no, p_class_code => wd.class_code, p_stream_code => wd.stream_code, p_term_code => wd.term_code,
                                         p_super_code => wd.super_code) > 1
                     AND grp_part_name = 0
                     AND grp_academic_code = 0
                     AND grp_score_type = 0
                     AND grp_optional_type = 0
                     AND grp_category_code = 0
                     AND grp_ranking_type = 0
                     AND grp_super_code = 0
                     AND grp_subject_code = 1 THEN
                    1
            END
        ) = 1
    ORDER BY
        wd.school_code,
        wd.batch_no,
        wd.class_code,
        wd.term_code,
        (
            CASE
                WHEN ranking_type = 'YES' THEN
                    1
                ELSE
                    2
            END
        ),
        part_name,
        ( SELECT
                a.serial_no
            FROM
                school_super a
          WHERE
                  a.school_code = wd.school_code
              AND a.batch_no# = wd.batch_no
              AND a.class_code = wd.class_code
              AND a.stream_code = wd.stream_code
              AND a.super_code = wd.super_code
        ) ASC NULLS LAST,
        ( SELECT
                serial_no
            FROM
                school_subject
          WHERE
                  school_code = wd.school_code
              AND batch_no# = wd.batch_no
              AND class_code = wd.class_code
              AND stream_code = wd.stream_code
              AND subject_code = wd.subject_code
        ) ASC NULLS LAST]]></subquery>
<subqueryNeedsMigration>false</subqueryNeedsMigration>
<with></with>
</SnapshotOraclev11g>
